{"version":3,"sources":["webpack:///./src/components/project.tsx","webpack:///./src/components/projects.tsx","webpack:///./src/pages/index.tsx"],"names":["ProjectWrapper","styled","div","Title","h3","About","Paragraph","p","StarsAndForksWrapper","Stars","Forks","props","withMarginLeft","Project","title","about","url","stargazersCount","forkCount","href","target","length","map","paragraph","icon","Star","RepoForked","ProjectsWrapper","FadeTop","Projects","data","github","viewer","repositories","nodes","repo","name","description","stargazers","totalCount","theme","anchor","background","text","GlobalStyle","createGlobalStyle","IndexPage"],"mappings":"mMAYMA,EAAiBC,IAAOC,IAAV,8EAAGD,CAAH,iGAQdE,EAAQF,IAAOG,GAAV,qEAAGH,CAAH,MAELI,EAAQJ,IAAOC,IAAV,qEAAGD,CAAH,4DAMLK,EAAYL,IAAOM,EAAV,yEAAGN,CAAH,wBAITO,EAAuBP,IAAOC,IAAV,oFAAGD,CAAH,mBAGpBQ,EAAQR,IAAOC,IAAV,qEAAGD,CAAH,4DAaLS,EAAQT,IAAOC,IAAV,qEAAGD,CAAH,4EAGM,SAAAU,GAAK,OAAKA,EAAMC,eAAiB,OAAS,MA6C5CC,EAtCkB,SAAC,GAM5B,IALJC,EAKI,EALJA,MACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,UAEA,OACE,kBAAClB,EAAD,KACE,kBAACG,EAAD,KACE,uBAAGgB,KAAMH,EAAKI,OAAO,UAClBN,IAGL,kBAACT,EAAD,KACGU,EAAMM,OAAS,GACdN,EAAMO,KAAI,SAAAC,GACR,OAAO,kBAACjB,EAAD,KAAYiB,MAEvB,kBAACf,EAAD,KACGS,EAAkB,GACjB,kBAACR,EAAD,KACE,kBAAC,IAAD,CAASe,KAAMC,MACf,8BAAOR,IAGVC,EAAY,GACX,kBAACR,EAAD,CAAOE,eAAgBK,EAAkB,GACvC,kBAAC,IAAD,CAASO,KAAME,MACf,8BAAOR,QClFfS,EAAkB1B,IAAOC,IAAV,4EAAGD,CAAH,sSA0Bf2B,EAAU3B,IAAOC,IAAV,oEAAGD,CAAH,8HA0EE4B,EA9CY,WACzB,IAAMC,EAAa,OAyBnB,OACE,oCACE,kBAACF,EAAD,MACA,kBAACD,EAAD,KACGG,EAAKC,OAAOC,OAAOC,aAAaC,MAAMZ,KAAI,SAAAa,GACzC,OACE,kBAAC,EAAD,CACErB,MAAOqB,EAAKC,KACZpB,IAAKmB,EAAKnB,IACVD,MAAO,CAACoB,EAAKE,aACbpB,gBAAiBkB,EAAKG,WAAWC,WACjCrB,UAAWiB,EAAKjB,kB,2GC1F9B,IAAMsB,EAAQ,CACZC,OAAQ,UACRC,WAAY,OACZC,KAAM,WAGFC,EAAcC,YAAH,KAeFC,UAbG,kBAChB,oCACE,kBAACF,EAAD,MACA,kBAAC,IAAD,CAAeJ,MAAOA,GACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK1B,MAAM,SACX,uDACA,kBAAC,EAAD,W","file":"component---src-pages-index-tsx-29d4c650734a69f991cf.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport Octicon, { Star, RepoForked } from \"@primer/octicons-react\"\n\ninterface Props {\n  title: string\n  about: string[]\n  url: string\n  stargazersCount: number\n  forkCount: number\n}\n\nconst ProjectWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0px 16px 22px 16px;\n  width: 90%;\n`\n\nconst Title = styled.h3``\n\nconst About = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Paragraph = styled.p`\n  text-align: center;\n`\n\nconst StarsAndForksWrapper = styled.div`\n  display: flex;\n`\nconst Stars = styled.div`\n  display: flex;\n  align-items: center;\n\n  span {\n    margin-left: 4px;\n  }\n`\n\ninterface IForks {\n  withMarginLeft: boolean\n}\n\nconst Forks = styled.div<IForks>`\n  display: flex;\n  align-items: center;\n  margin-left: ${props => (props.withMarginLeft ? \"16px\" : \"\")};\n\n  span {\n    margin-left: 4px;\n  }\n`\n\nconst Project: React.FC<Props> = ({\n  title,\n  about,\n  url,\n  stargazersCount,\n  forkCount,\n}) => {\n  return (\n    <ProjectWrapper>\n      <Title>\n        <a href={url} target=\"_blank\">\n          {title}\n        </a>\n      </Title>\n      <About>\n        {about.length > 0 &&\n          about.map(paragraph => {\n            return <Paragraph>{paragraph}</Paragraph>\n          })}\n        <StarsAndForksWrapper>\n          {stargazersCount > 0 && (\n            <Stars>\n              <Octicon icon={Star} />\n              <span>{stargazersCount}</span>\n            </Stars>\n          )}\n          {forkCount > 0 && (\n            <Forks withMarginLeft={stargazersCount > 0}>\n              <Octicon icon={RepoForked} />\n              <span>{forkCount}</span>\n            </Forks>\n          )}\n        </StarsAndForksWrapper>\n      </About>\n    </ProjectWrapper>\n  )\n}\n\nexport default Project\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Project from \"./project\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst ProjectsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  justify-content: flex-start;\n  align-items: center;\n  overflow: auto;\n\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: #fff;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: #000;\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`\n\nconst FadeTop = styled.div`\n  position: absolute;\n  top: 101px;\n  width: 100%;\n  height: 27px;\n  background-image: linear-gradient(to top, rgba(255, 255, 255, 0), #ffffff);\n`\n\ninterface Repository {\n  name: string\n  description: string\n  url: string\n  stargazers: {\n    totalCount: number\n  }\n  forkCount: number\n}\n\ninterface Data {\n  github: {\n    viewer: {\n      repositories: {\n        nodes: Repository[]\n      }\n    }\n  }\n}\n\nconst Projects: React.FC = () => {\n  const data: Data = useStaticQuery(graphql`\n    query GetRepositories {\n      github {\n        viewer {\n          repositories(\n            privacy: PUBLIC\n            first: 100\n            isFork: false\n            orderBy: { field: UPDATED_AT, direction: DESC }\n          ) {\n            nodes {\n              name\n              description\n              url\n              stargazers {\n                totalCount\n              }\n              forkCount\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <FadeTop />\n      <ProjectsWrapper>\n        {data.github.viewer.repositories.nodes.map(repo => {\n          return (\n            <Project\n              title={repo.name}\n              url={repo.url}\n              about={[repo.description]}\n              stargazersCount={repo.stargazers.totalCount}\n              forkCount={repo.forkCount}\n            />\n          )\n        })}\n      </ProjectsWrapper>\n    </>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\"\nimport Projects from \"../components/projects\"\n\nconst theme = {\n  anchor: \"#0275d8\",\n  background: \"#fff\",\n  text: \"#292b2c\",\n}\n\nconst GlobalStyle = createGlobalStyle``\n\nconst IndexPage = () => (\n  <>\n    <GlobalStyle />\n    <ThemeProvider theme={theme}>\n      <Layout>\n        <SEO title=\"Home\" />\n        <p>Hi, I'm Marcelo Cardoso.</p>\n        <Projects />\n      </Layout>\n    </ThemeProvider>\n  </>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}
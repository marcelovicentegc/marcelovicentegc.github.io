{"version":3,"sources":["webpack:///./src/components/PageHeader/index.tsx","webpack:///./src/components/Alert/styles.ts","webpack:///./src/components/Alert/index.tsx","webpack:///./src/components/Markdown/index.tsx","webpack:///./src/templates/article.tsx"],"names":["PageHeader","title","subTitle","pt","pb","fontSize","StyledAlert","styled","Box","props","theme","colors","secondary","primary","Alert","children","px","py","my","Markdown","syntax","background","text","Template","data","post","markdownRemark","meta","site","siteMetadata","dateToday","Date","datePost","fields","date","isOldPost","Number","Site","frontmatter","defaultTitle","name","content","excerpt","author","dangerouslySetInnerHTML","__html","html","id","className","pageQuery"],"mappings":"2FAAA,mFASaA,EAAyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACpD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,CAAC,GAAI,IAAKC,GAAI,CAAC,EAAG,KACzB,kBAAC,IAAD,KAAKH,GACJC,EAAW,kBAAC,IAAD,CAAMG,SAAU,CAAC,EAAG,EAAG,IAAKH,GAAmB,S,mOCVpDI,EAAcC,kBAAOC,KAAV,sEAAGD,CAAH,iFAEF,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,aAGvC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,WCD1BC,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC1C,kBAACT,EAAD,CAAaU,GAAI,CAAC,EAAG,IAAKC,GAAI,CAAC,IAAKC,GAAI,CAAC,EAAG,KACzCH,ICNQI,EAAWZ,kBAAOC,KAAV,+DAAGD,CAAH,0nFACV,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,aAiGf,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOS,OAAOC,cAC9C,SAAAZ,GAAK,OAAIA,EAAMC,MAAMC,OAAOS,OAAOE,QC7FjC,SAASC,EAAT,GAA4B,IAARC,EAAQ,EAARA,KACTC,EAASD,EAAzBE,eACFC,EAAOH,EAAKI,KAAKC,aAEjBC,EAAY,IAAIC,KAChBC,EAAW,IAAID,KAAKN,EAAKQ,OAAOC,MAEhCC,GACHC,OAAON,GAAaM,OAAOJ,IAA5B,QAAoE,EAEtE,OACE,kBAACK,EAAA,EAAD,KACE,8BACE,iCACE,kBAAC,IAAD,CAAQpC,MAAUwB,EAAKa,YAAYrC,MAAtB,MAAiC0B,EAAKY,cACjD,0BACEC,KAAK,gBACLC,QAAYhB,EAAKa,YAAYrC,MAAtB,MAAiC0B,EAAKY,eAE/C,0BAAMC,KAAK,sBAAsBC,QAAShB,EAAKiB,WAEjD,kBAAC1C,EAAA,EAAD,CACEC,MAAOwB,EAAKa,YAAYrC,MACxBC,SAAQ,MAAQyB,EAAKgB,OAAb,OAA0BlB,EAAKQ,OAAOC,OAEhD,kBAAC,IAAD,KACGC,EACC,kBAAC,EAAD,8EAIE,KACJ,kBAAChB,EAAD,CACEyB,wBAAyB,CAAEC,OAAQpB,EAAKqB,MACxCC,GAAG,MACHC,UAAU,gBASjB,IAAMC,EAAY","file":"component---src-templates-article-tsx-e18de0993effb36a89aa.js","sourcesContent":["import React from \"react\"\nimport { Inner, Box } from \"../System\"\nimport { Text, H1 } from \"../../typography\"\n\ninterface PageHeaderProps {\n  title: string\n  subTitle?: string\n}\n\nexport const PageHeader: React.SFC<PageHeaderProps> = ({ title, subTitle }) => (\n  <Inner>\n    <Box pt={[24, 48]} pb={[8, 16]}>\n      <H1>{title}</H1>\n      {subTitle ? <Text fontSize={[0, 1, 2]}>{subTitle}</Text> : null}\n    </Box>\n  </Inner>\n)\n","import styled from \"styled-components\"\nimport { Box } from \"../System\"\n\nexport const StyledAlert = styled(Box)`\n  width: 100%;\n  background-color: ${props => props.theme.colors.secondary};\n  font-size: 14px;\n  line-height: 1.6em;\n  color: ${props => props.theme.colors.primary};\n`\n","import React from \"react\"\nimport { StyledAlert } from \"./styles\"\n\ninterface AlertProps {\n  children: React.ReactNode\n}\n\nexport const Alert: React.SFC<AlertProps> = ({ children }) => (\n  <StyledAlert px={[8, 16]} py={[16]} my={[8, 16]}>\n    {children}\n  </StyledAlert>\n)\n","import styled from \"styled-components\"\nimport { Box } from \"../System\"\n\nexport const Markdown = styled(Box)`\n  color: ${props => props.theme.colors.secondary};\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n\n  table {\n    display: table;\n    margin: 24px 0;\n    width: 100%;\n\n    th {\n      padding: 8px 10px;\n      background: rgba(0, 0, 0, 0.1);\n      font-size: 16px;\n      font-weight: 600;\n      text-align: left;\n    }\n\n    tr {\n      background: transparent;\n\n      &:nth-child(even) {\n        background: rgba(0, 0, 0, 0.1);\n      }\n    }\n\n    td {\n      padding: 8px 10px;\n    }\n\n    em {\n      font-style: normal;\n      text-decoration: underline;\n    }\n  }\n\n  p {\n    margin-bottom: 16px;\n\n    &:first-of-type {\n      font-size: 1.1em;\n    }\n  }\n\n  p,\n  li {\n    font-size: 16px;\n    line-height: 1.9em;\n  }\n\n  strong {\n    font-weight: 500;\n  }\n\n  img {\n    width: calc(100% + 200px);\n    margin: 32px 0 23px -100px;\n  }\n\n  h2 {\n    font-size: 18px;\n    font-weight: 600;\n    line-height: 1.4em;\n    margin: 16px 0;\n  }\n\n  h3 {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1.4em;\n    margin: 16px 0;\n  }\n\n  hr {\n    border-color: rgba(255, 255, 255, 0.2);\n  }\n\n  .gatsby-resp-image-wrapper {\n    margin: 24px 0;\n  }\n\n  code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    font-family: Consolas, Menlo, Monaco, \"Andale Mono WT\", \"Andale Mono\",\n      \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\",\n      \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\",\n      \"Courier New\", Courier, monospace;\n    font-size: 14px;\n    line-height: 1.375;\n    direction: ltr;\n    text-align: left;\n    white-space: pre;\n    word-spacing: normal;\n    word-break: normal;\n    tab-size: 4;\n    -ms-hyphens: none;\n    hyphens: none;\n    background-color: ${props => props.theme.colors.syntax.background};\n    color: ${props => props.theme.colors.syntax.text};\n    border-radius: 4px;\n  }\n\n  pre[class*=\"language-\"]::-moz-selection,\n  pre[class*=\"language-\"] ::-moz-selection,\n  code[class*=\"language-\"]::-moz-selection,\n  code[class*=\"language-\"] ::-moz-selection {\n    text-shadow: none;\n    background: #eee8d5;\n  }\n  pre[class*=\"language-\"]::selection,\n  pre[class*=\"language-\"] ::selection,\n  code[class*=\"language-\"]::selection,\n  code[class*=\"language-\"] ::selection {\n    text-shadow: none;\n    background: #eee8d5;\n  }\n  pre[class*=\"language-\"] {\n    padding: 1em;\n    margin: 0.5em 0;\n    overflow: auto;\n  }\n  :not(pre) > code[class*=\"language-\"] {\n    padding: 0.1em;\n    border-radius: 0.3em;\n  }\n  .token.comment,\n  .token.prolog,\n  .token.doctype,\n  .token.cdata {\n    color: #839496;\n  }\n  .token.punctuation {\n    color: #586e75;\n  }\n  .token.namespace {\n    opacity: 0.7;\n  }\n  .token.operator,\n  .token.boolean,\n  .token.number {\n    color: #cb4b16;\n  }\n  .token.property {\n    color: #b58900;\n  }\n  .token.tag {\n    color: #268bd2;\n  }\n  .token.string {\n    color: #2aa198;\n  }\n  .token.selector {\n    color: #6c71c4;\n  }\n  .token.attr-name {\n    color: #cb4b16;\n  }\n  .token.entity,\n  .token.url,\n  .language-css .token.string,\n  .style .token.string {\n    color: #2aa198;\n  }\n  .token.attr-value,\n  .token.keyword,\n  .token.control,\n  .token.directive,\n  .token.unit {\n    color: #859900;\n  }\n  .token.statement,\n  .token.regex,\n  .token.atrule {\n    color: #2aa198;\n  }\n  .token.placeholder,\n  .token.variable {\n    color: #268bd2;\n  }\n  .token.deleted {\n    text-decoration: line-through;\n  }\n  .token.inserted {\n    border-bottom: 1px dotted #002b36;\n    text-decoration: none;\n  }\n  .token.italic {\n    font-style: italic;\n  }\n  .token.important,\n  .token.bold {\n    font-weight: bold;\n  }\n  .token.important {\n    color: #dc322f;\n  }\n  .token.entity {\n    cursor: help;\n  }\n  pre > code.highlight {\n    outline: 0.4em solid #dc322f;\n    outline-offset: 0.4em;\n  }\n`\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { graphql } from \"gatsby\"\nimport { Site } from \"../components/Site\"\nimport { PageHeader } from \"../components/PageHeader\"\nimport { Inner } from \"../components/System\"\nimport { Alert } from \"../components/Alert\"\nimport { Markdown } from \"../components/Markdown\"\n\nexport default function Template({ data }) {\n  const { markdownRemark: post } = data\n  const meta = data.site.siteMetadata\n\n  const dateToday = new Date()\n  const datePost = new Date(post.fields.date)\n\n  const isOldPost =\n    (Number(dateToday) - Number(datePost)) / (1000 * 3600 * 24 * 365) > 1\n\n  return (\n    <Site>\n      <main>\n        <article>\n          <Helmet title={`${post.frontmatter.title} - ${meta.defaultTitle}`}>\n            <meta\n              name=\"twitter:title\"\n              content={`${post.frontmatter.title} - ${meta.defaultTitle}`}\n            />\n            <meta name=\"twitter:description\" content={post.excerpt} />\n          </Helmet>\n          <PageHeader\n            title={post.frontmatter.title}\n            subTitle={`By ${meta.author} on ${post.fields.date}`}\n          />\n          <Inner>\n            {isOldPost ? (\n              <Alert>\n                This post is over a year old. Some of the content may be out of\n                date.\n              </Alert>\n            ) : null}\n            <Markdown\n              dangerouslySetInnerHTML={{ __html: post.html }}\n              id=\"top\"\n              className=\"content\"\n            />\n          </Inner>\n        </article>\n      </main>\n    </Site>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($slug: String!) {\n    site {\n      siteMetadata {\n        author\n        defaultTitle\n        defaultDescription\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      fields {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/components/Section/styles.ts","webpack:///./src/components/Section/index.tsx"],"names":["PostDate","styled","Text","HomeFeature","Flex","props","theme","colors","primary","IndexPage","data","meta","site","siteMetadata","posts","allMarkdownRemark","edges","title","defaultTitle","name","content","defaultDescription","py","filter","post","node","frontmatter","length","map","mb","key","fontWeight","to","fields","slug","style","textDecoration","is","dateTime","date","fontSize","excerpt","query","render","StyledSection","Box","Section","children","as","pb","SectionTitle"],"mappings":"+yBASMA,EAAWC,kBAAOC,KAAV,qEAAGD,CAAH,oCAKRE,EAAcF,kBAAOG,KAAV,wEAAGH,CAAH,gFAGK,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,WAI5CC,EAAY,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACbC,EAAOD,EAAKE,KAAKC,aACRC,EAAUJ,EAAKK,kBAAtBC,MACR,OACE,kBAAC,IAAD,KACE,8BACE,kBAAC,IAAD,CAAQC,MAAON,EAAKO,cAClB,0BAAMC,KAAK,gBAAgBC,QAAST,EAAKO,eACzC,0BAAMC,KAAK,sBAAsBC,QAAST,EAAKU,sBAEjD,kBAAClB,EAAD,CAAamB,GAAI,CAAC,EAAG,EAAG,IACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,iCACA,kBAAC,IAAD,8DAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACCR,EACES,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYT,MAAMU,OAAS,KACpDC,KAAI,gBAASJ,EAAT,EAAGC,KAAH,OACH,kBAAC,IAAD,CAAKI,GAAI,EAAGC,IAAKN,EAAKE,YAAYT,OAChC,kBAAC,IAAD,CAAMc,WAAW,OACf,kBAAC,OAAD,CACEC,GAAIR,EAAKS,OAAOC,KAChBC,MAAO,CAAEC,eAAgB,SAExBZ,EAAKE,YAAYT,MAClB,kBAACjB,EAAD,CAAUqC,GAAG,OAAOC,SAAUd,EAAKS,OAAOM,MACvCf,EAAKS,OAAOM,MAEf,kBAAC,IAAD,CAAMF,GAAG,OAAOG,SAAU,GACvBhB,EAAKiB,oBAaf,4BACb,kBAAC,cAAD,CACEC,MAAK,aAyBLC,OAAQ,SAAAjC,GAAI,OAAI,kBAACD,EAAD,CAAWC,KAAMA,KA1BnC,W,yMCjEWkC,EAAgB3C,kBAAO4C,KAAV,wEAAG5C,CAAH,kCACG,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,W,YCIlD,IAAMsC,EAAmC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAa1C,E,oIAAhB,wBAC9C,kBAACuC,EAAD,eAAeI,GAAG,UAAUnB,GAAI,CAAC,EAAG,EAAG,GAAIoB,GAAI,CAAC,EAAG,EAAG,IAAQ5C,GAC3D0C,IAIQG,EAAwC,SAAC,GAAD,IAAGH,EAAH,EAAGA,SAAH,OACnD,kBAAC,IAAD,CAAIlB,GAAI,CAAC,EAAG,EAAG,IAAKkB","file":"component---src-pages-index-tsx-8fdbb2f0a44b8ed7cbb7.js","sourcesContent":["import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport styled from \"styled-components\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport { Site } from \"../components/Site\"\nimport { Text, P, H1 } from \"../typography\"\nimport { Inner, Box, Flex } from \"../components/System\"\nimport { Section, SectionTitle } from \"../components/Section\"\n\nconst PostDate = styled(Text)`\n  font-size: 0.8em;\n  display: block;\n`\n\nconst HomeFeature = styled(Flex)`\n  align-items: center;\n  overflow: hidden;\n  background-color: ${props => props.theme.colors.primary};\n  position: relative;\n`\n\nconst IndexPage = ({ data }) => {\n  const meta = data.site.siteMetadata\n  const { edges: posts } = data.allMarkdownRemark\n  return (\n    <Site>\n      <main>\n        <Helmet title={meta.defaultTitle}>\n          <meta name=\"twitter:title\" content={meta.defaultTitle} />\n          <meta name=\"twitter:description\" content={meta.defaultDescription} />\n        </Helmet>\n        <HomeFeature py={[3, 4, 5]}>\n          <Inner>\n            <H1>Get shit done, at scale.</H1>\n            <P>I'm Marcelo, a Frontend Engineer based in Salvador.</P>\n          </Inner>\n        </HomeFeature>\n        <Section>\n          <Inner>\n            <SectionTitle>Articles</SectionTitle>\n            {posts\n              .filter(post => post.node.frontmatter.title.length > 0)\n              .map(({ node: post }) => (\n                <Box mb={3} key={post.frontmatter.title}>\n                  <Text fontWeight=\"500\">\n                    <Link\n                      to={post.fields.slug}\n                      style={{ textDecoration: \"none\" }}\n                    >\n                      {post.frontmatter.title}\n                      <PostDate is=\"time\" dateTime={post.fields.date}>\n                        {post.fields.date}\n                      </PostDate>\n                      <Text is=\"span\" fontSize={1}>\n                        {post.excerpt}\n                      </Text>\n                    </Link>\n                  </Text>\n                </Box>\n              ))}\n          </Inner>\n        </Section>\n      </main>\n    </Site>\n  )\n}\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query IndexQuery {\n        site {\n          siteMetadata {\n            defaultTitle\n            defaultDescription\n          }\n        }\n        allMarkdownRemark(sort: { fields: [fields___date], order: DESC }) {\n          edges {\n            node {\n              excerpt(pruneLength: 100)\n              id\n              fields {\n                date(formatString: \"MMMM DD, YYYY\")\n                slug\n              }\n              frontmatter {\n                title\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => <IndexPage data={data} />}\n  />\n)\n","import styled from \"styled-components\"\nimport { Box } from \"../System\"\n\nexport const StyledSection = styled(Box)`\n  border-bottom: 2px solid ${props => props.theme.colors.primary};\n`\n","import React, { HTMLProps } from \"react\"\nimport { StyledSection } from \"./styles\"\nimport { H2 } from \"../../typography\"\n\ninterface SectionProps extends Omit<HTMLProps<HTMLDivElement>, \"as\"> {\n  children: React.ReactNode\n}\n\nexport const Section: React.SFC<SectionProps> = ({ children, ...props }) => (\n  <StyledSection as=\"section\" mb={[2, 2, 3]} pb={[2, 2, 3]} {...props}>\n    {children}\n  </StyledSection>\n)\n\nexport const SectionTitle: React.SFC<SectionProps> = ({ children }) => (\n  <H2 mb={[2, 2, 2]}>{children}</H2>\n)\n"],"sourceRoot":""}
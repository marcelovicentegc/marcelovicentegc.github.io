{"version":3,"sources":["webpack:///./src/components/PageHeader/index.tsx","webpack:///./src/components/Row/index.ts","webpack:///./src/pages/profile.tsx","webpack:///./src/components/Section/styles.ts","webpack:///./src/components/Section/index.tsx"],"names":["PageHeader","title","subTitle","pt","pb","fontSize","Row","styled","Flex","ProfilePage","data","meta","site","siteMetadata","Site","defaultTitle","name","content","defaultDescription","Section","href","target","rel","fontWeight","github","viewer","repositories","nodes","map","project","url","description","StyledSection","Box","props","theme","colors","primary","children","as","mb","SectionTitle"],"mappings":"i+GAAA,mFASaA,EAAyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACpD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,CAAC,GAAI,IAAKC,GAAI,CAAC,EAAG,KACzB,kBAAC,IAAD,KAAKH,GACJC,EAAW,kBAAC,IAAD,CAAMG,SAAU,CAAC,EAAG,EAAG,IAAKH,GAAmB,S,qLCVpDI,EAAMC,kBAAOC,KAAV,0DAAGD,CAAH,oFC2NDE,UArLe,WAC5B,IAAMC,EAAa,OA4BbC,EAAOD,EAAKE,KAAKC,aACvB,OACE,kBAACC,EAAA,EAAD,KACE,8BACE,kBAAC,IAAD,CAAQb,MAAK,aAAeU,EAAKI,cAC/B,0BACEC,KAAK,gBACLC,QAAO,aAAeN,EAAKI,eAE7B,0BAAMC,KAAK,sBAAsBC,QAASN,EAAKO,sBAEjD,kBAAClB,EAAA,EAAD,CAAYC,MAAM,YAClB,kBAAC,IAAD,KACE,kBAACkB,EAAA,EAAD,KACE,kBAAC,IAAD,uEACkE,IAChE,uBACEC,KAAK,mBACLC,OAAO,SACPC,IAAI,uBAHN,SAFF,MAYF,kBAACH,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,mBACA,kBAAC,IAAD,CAAGI,WAAY,KAAf,0BACA,kBAAC,IAAD,yWAOE,uBAAGH,KAAK,mCAAmCC,OAAO,UAAlD,UAPF,KAYA,kBAAC,IAAD,wEAGA,kBAAC,IAAD,yFAEuB,IACrB,uBAAGD,KAAK,uBAAuBC,OAAO,UAAtC,cAEK,IALP,8PAWA,kBAAC,IAAD,ujBASuC,IACrC,uBAAGD,KAAK,+BAA+BC,OAAO,UAA9C,kEAVF,ghCA+BA,kBAAC,IAAD,6GAEuC,IACrC,uBAAGD,KAAM,0BAA2BC,OAAQ,UAA5C,aAEK,IALP,+GAO8C,IAC5C,uBAAGD,KAAM,mBAAoBC,OAAQ,UAArC,gCARF,kHAaE,uBACED,KAAM,wDACNC,OAAQ,UAFV,2CAbF,iOAyBF,kBAACF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,6BACA,kBAACb,EAAD,KACE,kBAAC,IAAD,KACE,uBACEc,KACE,iEAGD,uBAAwB,IAL3B,kEAUHV,EAAKc,OAAOC,OAAOC,aAAaC,MAAMC,KAAI,SAAAC,GACzC,OACE,kBAACvB,EAAD,KACE,kBAAC,IAAD,KACE,uBAAGc,KAAMS,EAAQC,KACdD,EAAQb,KAAM,IACda,EAAQE,aAAR,KAA4BF,EAAQE,mBAOjD,kBAACZ,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,eACA,kBAAC,IAAD,KACE,uBAAGC,KAAK,8DAAR,0B,yMChNDY,EAAgBzB,kBAAO0B,KAAV,wEAAG1B,CAAH,kCACG,SAAA2B,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,W,YCIlD,IAAMlB,EAAmC,SAAC,GAAD,IAAGmB,EAAH,EAAGA,SAAaJ,E,oIAAhB,wBAC9C,kBAACF,EAAD,eAAeO,GAAG,UAAUC,GAAI,CAAC,EAAG,EAAG,GAAIpC,GAAI,CAAC,EAAG,EAAG,IAAQ8B,GAC3DI,IAIQG,EAAwC,SAAC,GAAD,IAAGH,EAAH,EAAGA,SAAH,OACnD,kBAAC,IAAD,CAAIE,GAAI,CAAC,EAAG,EAAG,IAAKF","file":"component---src-pages-profile-tsx-1c28155a4d8eca4b6e83.js","sourcesContent":["import React from \"react\"\nimport { Inner, Box } from \"../System\"\nimport { Text, H1 } from \"../../typography\"\n\ninterface PageHeaderProps {\n  title: string\n  subTitle?: string\n}\n\nexport const PageHeader: React.SFC<PageHeaderProps> = ({ title, subTitle }) => (\n  <Inner>\n    <Box pt={[24, 48]} pb={[8, 16]}>\n      <H1>{title}</H1>\n      {subTitle ? <Text fontSize={[0, 1, 2]}>{subTitle}</Text> : null}\n    </Box>\n  </Inner>\n)\n","import styled from \"styled-components\"\nimport { Flex } from \"../System\"\n\nexport const Row = styled(Flex)`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Site } from \"../components/Site\"\nimport { PageHeader } from \"../components/PageHeader\"\nimport { Inner } from \"../components/System\"\nimport { Section, SectionTitle } from \"../components/Section\"\nimport { P, Text } from \"../typography\"\nimport { Row } from \"../components/Row\"\n\ninterface Repository {\n  name: string\n  description: string\n  url: string\n  stargazers: {\n    totalCount: number\n  }\n  forkCount: number\n}\n\ninterface GithubData {\n  github: {\n    viewer: {\n      repositories: {\n        nodes: Repository[]\n      }\n    }\n  }\n}\n\ninterface SiteData {\n  site: {\n    siteMetadata: {\n      defaultTitle: string\n      defaultDescription: string\n    }\n  }\n}\n\ninterface Data extends SiteData, GithubData {}\n\nconst ProfilePage: React.FC = () => {\n  const data: Data = useStaticQuery(graphql`\n    query ProfileQueryAndGetRepositories {\n      github {\n        viewer {\n          repositories(\n            privacy: PUBLIC\n            first: 100\n            isFork: false\n            orderBy: { field: UPDATED_AT, direction: DESC }\n          ) {\n            nodes {\n              name\n              description\n              url\n            }\n          }\n        }\n      }\n\n      site {\n        siteMetadata {\n          defaultTitle\n          defaultDescription\n        }\n      }\n    }\n  `)\n\n  const meta = data.site.siteMetadata\n  return (\n    <Site>\n      <main>\n        <Helmet title={`Profile - ${meta.defaultTitle}`}>\n          <meta\n            name=\"twitter:title\"\n            content={`Profile - ${meta.defaultTitle}`}\n          />\n          <meta name=\"twitter:description\" content={meta.defaultDescription} />\n        </Helmet>\n        <PageHeader title=\"Profile\" />\n        <Inner>\n          <Section>\n            <P>\n              I'm Marcelo, a Frontend Engineer based in Salvador currently at{\" \"}\n              <a\n                href=\"https://cubos.io\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Cubos\n              </a>\n              .\n            </P>\n          </Section>\n          <Section>\n            <SectionTitle>Experience</SectionTitle>\n            <P fontWeight={500}>Cubos (2019 - Present)</P>\n            <P>\n              I developed and maintained web applications within the range of 5\n              to 80k lines of code mostly written with React, on a MVVM fashion,\n              while also writing unit tests, building complex pipelines,\n              documenting the front-end, back-end, the business logic and\n              developing APIs with Typescript and an incredibly amazing tool\n              developed internally at Cubos called &nbsp;\n              <a href=\"https://github.com/sdkgen/sdkgen\" target=\"_blank\">\n                sdkgen\n              </a>\n              .\n            </P>\n            <P>\n              The projects I had a critical role were Fitdance and Credcesta.\n            </P>\n            <P>\n              Fitdance is a huge dancing platform, mainly online. While at\n              Fitdance, I built an{\" \"}\n              <a href=\"https://fitdance.com\" target=\"_blank\">\n                e-commerce\n              </a>{\" \"}\n              and a CMS to manage both the e-commerce and the dancing platform\n              itself. We were a team of eight people: a project manager, a QA\n              analyst, four backend developers and two frontend developers -\n              with me included. The e-commerce handles 100k users/month.\n            </P>\n            <P>\n              Credcesta is a payroll loan platform implemented in the state of\n              Bahia, Brazil, for clients and the business owners. I maintained\n              the website for users to manage their payroll loans while working\n              on its redesign and expansion. Besides that, I built the website\n              for the Credcesta staff to manage themselves, visualize data\n              related to the main platform usage, and send push notifications to\n              their clients. I used a UI library I built and made available on a\n              private NPM registry based on the design system developed at Cubos\n              on both websites. In addition to it,{\" \"}\n              <a href=\"https://www.credcesta.com.br\" target=\"_blank\">\n                I managed to insert a CMS into their preexistent institutional\n              </a>\n              , static website, using Django, moving all the code base\n              previously written with the Pug template engine and Gulp to the\n              python framework, integrating with some AWS services and making a\n              REST API available to fetch data about stores affiliated to\n              Credcesta. The static website is Cubos' first Django product\n              released. I also wrote the push notifications API and an API to\n              manage the staff, as well as contributed to the API consumed by\n              the main application - the one for users to manage their payroll\n              loans - clients (iOS, Android and Web). I used Kubernetes to\n              deploy the push notifications API, the admin API, the\n              institucional website, the admin website and the main platform\n              website. The team grew steadily from the beginning, and I was the\n              only frontend developer from September/2019 to April/2020. Right\n              now we are a team of twelve and still growing: three Android\n              developers, two iOS developers, one designer, one QA analyst,\n              three backend developers and two frontend developers, with myself\n              having an active role on the backend.\n            </P>\n            <P>\n              I also participated/contributed to projects such as BBNK - which\n              is a white-label \"bank generator\" -,{\" \"}\n              <a href={\"https://amigoedu.com.br\"} target={\"_blank\"}>\n                Amigo Edu\n              </a>{\" \"}\n              - an application that gathers graduation courses information and\n              offers discounts through the platform - and{\" \"}\n              <a href={\"https://cubos.io\"} target={\"_blank\"}>\n                Cubos' institutional website\n              </a>\n              . I created some internal tools such as an email signature\n              generator and a code generator (sdkgen) playground (\n              <a\n                href={\"https://github.com/marcelovicentegc/sdkgen-playground\"}\n                target={\"_blank\"}\n              >\n                which is available on Github by the way\n              </a>\n              ). Besides that, I contributed to the creation of a\n              quality-oriented web development culture, made awesome connections\n              I'll carry with me forever, learned a lot from my colleagues and\n              shared as much as I could with them.\n            </P>\n          </Section>\n          <Section>\n            <SectionTitle>Open source projects</SectionTitle>\n            <Row>\n              <Text>\n                <a\n                  href={\n                    \"https://underworld-industries.github.io/react-github-heatmap/\"\n                  }\n                >\n                  {\"react-github-heatmap\"}{\" \"}\n                  {`- A plugable general purpose Github-like contribution graph.`}\n                </a>\n              </Text>\n            </Row>\n            {data.github.viewer.repositories.nodes.map(project => {\n              return (\n                <Row>\n                  <Text>\n                    <a href={project.url}>\n                      {project.name}{\" \"}\n                      {project.description && `- ${project.description}`}\n                    </a>\n                  </Text>\n                </Row>\n              )\n            })}\n          </Section>\n          <Section>\n            <SectionTitle>Resume</SectionTitle>\n            <Text>\n              <a href=\"https://stackoverflow.com/users/story/pdf/9317004?View=Pdf\">\n                Download as PDF\n              </a>\n            </Text>\n          </Section>\n        </Inner>\n      </main>\n    </Site>\n  )\n}\n\nexport default ProfilePage\n","import styled from \"styled-components\"\nimport { Box } from \"../System\"\n\nexport const StyledSection = styled(Box)`\n  border-bottom: 2px solid ${props => props.theme.colors.primary};\n`\n","import React, { HTMLProps } from \"react\"\nimport { StyledSection } from \"./styles\"\nimport { H2 } from \"../../typography\"\n\ninterface SectionProps extends Omit<HTMLProps<HTMLDivElement>, \"as\"> {\n  children: React.ReactNode\n}\n\nexport const Section: React.SFC<SectionProps> = ({ children, ...props }) => (\n  <StyledSection as=\"section\" mb={[2, 2, 3]} pb={[2, 2, 3]} {...props}>\n    {children}\n  </StyledSection>\n)\n\nexport const SectionTitle: React.SFC<SectionProps> = ({ children }) => (\n  <H2 mb={[2, 2, 2]}>{children}</H2>\n)\n"],"sourceRoot":""}
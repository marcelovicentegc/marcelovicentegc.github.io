{"version":3,"sources":["webpack:///./src/components/PageHeader/index.tsx","webpack:///./src/components/Row/index.ts","webpack:///./src/pages/profile.tsx","webpack:///./src/components/Section/styles.ts","webpack:///./src/components/Section/index.tsx"],"names":["PageHeader","title","subTitle","pt","pb","fontSize","Row","styled","Flex","ProfilePage","data","meta","site","siteMetadata","Site","defaultTitle","name","content","defaultDescription","Section","href","target","rel","fontWeight","github","viewer","repositories","nodes","map","project","url","description","StyledSection","Box","props","theme","colors","primary","children","as","mb","SectionTitle"],"mappings":"kuGAAA,mFASaA,EAAyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACpD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,CAAC,GAAI,IAAKC,GAAI,CAAC,EAAG,KACzB,kBAAC,IAAD,KAAKH,GACJC,EAAW,kBAAC,IAAD,CAAMG,SAAU,CAAC,EAAG,EAAG,IAAKH,GAAmB,S,qLCVpDI,EAAMC,kBAAOC,KAAV,0DAAGD,CAAH,oFCqJDE,UA/Ge,WAC5B,IAAMC,EAAa,OA4BbC,EAAOD,EAAKE,KAAKC,aACvB,OACE,kBAACC,EAAA,EAAD,KACE,8BACE,kBAAC,IAAD,CAAQb,MAAK,aAAeU,EAAKI,cAC/B,0BACEC,KAAK,gBACLC,QAAO,aAAeN,EAAKI,eAE7B,0BAAMC,KAAK,sBAAsBC,QAASN,EAAKO,sBAEjD,kBAAClB,EAAA,EAAD,CAAYC,MAAM,YAClB,kBAAC,IAAD,KACE,kBAACkB,EAAA,EAAD,KACE,kBAAC,IAAD,uEACkE,IAChE,uBACEC,KAAK,mBACLC,OAAO,SACPC,IAAI,uBAHN,SAFF,MAYF,kBAACH,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,mBACA,kBAAC,IAAD,CAAGI,WAAY,KAAf,0BACA,kBAAC,IAAD,07CA0BF,kBAACJ,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,0BACCT,EAAKc,OAAOC,OAAOC,aAAaC,MAAMC,KAAI,SAAAC,GACzC,OACE,kBAACvB,EAAD,KACE,kBAAC,IAAD,KACE,uBAAGc,KAAMS,EAAQC,KACdD,EAAQb,KAAM,IACda,EAAQE,aAAR,KAA4BF,EAAQE,mBAOjD,kBAACZ,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,eACA,kBAAC,IAAD,KACE,uBAAGC,KAAK,IAAR,0B,yMC5IDY,EAAgBzB,kBAAO0B,KAAV,wEAAG1B,CAAH,kCACG,SAAA2B,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,W,YCIlD,IAAMlB,EAAmC,SAAC,GAAD,IAAGmB,EAAH,EAAGA,SAAaJ,E,oIAAhB,wBAC9C,kBAACF,EAAD,eAAeO,GAAG,UAAUC,GAAI,CAAC,EAAG,EAAG,GAAIpC,GAAI,CAAC,EAAG,EAAG,IAAQ8B,GAC3DI,IAIQG,EAAwC,SAAC,GAAD,IAAGH,EAAH,EAAGA,SAAH,OACnD,kBAAC,IAAD,CAAIE,GAAI,CAAC,EAAG,EAAG,IAAKF","file":"component---src-pages-profile-tsx-390359f6730e156f1661.js","sourcesContent":["import React from \"react\"\nimport { Inner, Box } from \"../System\"\nimport { Text, H1 } from \"../../typography\"\n\ninterface PageHeaderProps {\n  title: string\n  subTitle?: string\n}\n\nexport const PageHeader: React.SFC<PageHeaderProps> = ({ title, subTitle }) => (\n  <Inner>\n    <Box pt={[24, 48]} pb={[8, 16]}>\n      <H1>{title}</H1>\n      {subTitle ? <Text fontSize={[0, 1, 2]}>{subTitle}</Text> : null}\n    </Box>\n  </Inner>\n)\n","import styled from \"styled-components\"\nimport { Flex } from \"../System\"\n\nexport const Row = styled(Flex)`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Site } from \"../components/Site\"\nimport { PageHeader } from \"../components/PageHeader\"\nimport { Inner } from \"../components/System\"\nimport { Section, SectionTitle } from \"../components/Section\"\nimport { P, Text } from \"../typography\"\nimport { Row } from \"../components/Row\"\n\ninterface Repository {\n  name: string\n  description: string\n  url: string\n  stargazers: {\n    totalCount: number\n  }\n  forkCount: number\n}\n\ninterface GithubData {\n  github: {\n    viewer: {\n      repositories: {\n        nodes: Repository[]\n      }\n    }\n  }\n}\n\ninterface SiteData {\n  site: {\n    siteMetadata: {\n      defaultTitle: string\n      defaultDescription: string\n    }\n  }\n}\n\ninterface Data extends SiteData, GithubData {}\n\nconst ProfilePage: React.FC = () => {\n  const data: Data = useStaticQuery(graphql`\n    query ProfileQueryAndGetRepositories {\n      github {\n        viewer {\n          repositories(\n            privacy: PUBLIC\n            first: 100\n            isFork: false\n            orderBy: { field: UPDATED_AT, direction: DESC }\n          ) {\n            nodes {\n              name\n              description\n              url\n            }\n          }\n        }\n      }\n\n      site {\n        siteMetadata {\n          defaultTitle\n          defaultDescription\n        }\n      }\n    }\n  `)\n\n  const meta = data.site.siteMetadata\n  return (\n    <Site>\n      <main>\n        <Helmet title={`Profile - ${meta.defaultTitle}`}>\n          <meta\n            name=\"twitter:title\"\n            content={`Profile - ${meta.defaultTitle}`}\n          />\n          <meta name=\"twitter:description\" content={meta.defaultDescription} />\n        </Helmet>\n        <PageHeader title=\"Profile\" />\n        <Inner>\n          <Section>\n            <P>\n              I'm Marcelo, a Frontend Engineer based in Salvador currently at{\" \"}\n              <a\n                href=\"https://cubos.io\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Cubos\n              </a>\n              .\n            </P>\n          </Section>\n          <Section>\n            <SectionTitle>Experience</SectionTitle>\n            <P fontWeight={500}>Cubos (2019 - Present)</P>\n            <P>\n              I developed and maintained web applications within the range of 5\n              to 80k lines mostly written in React, while also writing unit\n              tests, building pipelines and documenting the front-end, back-end\n              and the business logic. The projects I had a major role were the\n              Fitdance (an e-commerce and a system to manage both the e-commerce\n              and the dancing platform business) and Credcesta (a payroll loan\n              platform implemented in the state of Bahia, Brazil, for clients\n              and the business owners. I built the website for users to manage\n              their payroll loans, the website for the Credcesta staff to manage\n              themselves and send push notifications, both using a UI library I\n              built - and deployed to a private NPM registry - based on the\n              design system developed at Cubos. Besides that, I managed to\n              insert a CMS into their institutional, static website, using\n              Django, moving the code base previously written with the Pug\n              template engine and Gulp to Django, integrating with AWS S3). I\n              also participated/contributed to projects such as BBNK (a\n              white-label banking generator solution), Lex (an institutional\n              website for a tributary technology company), Amigo Edu (a website\n              that gathers graduation courses information and offers discounts\n              trough the platform), Cubos' institutional website, created some\n              intern tools such as an email signature generator and a code\n              generator (sdkgen) playground, as well as contributed to the\n              creation of a quality-oriented web development culture.\n            </P>\n          </Section>\n          <Section>\n            <SectionTitle>Personal projects</SectionTitle>\n            {data.github.viewer.repositories.nodes.map(project => {\n              return (\n                <Row>\n                  <Text>\n                    <a href={project.url}>\n                      {project.name}{\" \"}\n                      {project.description && `- ${project.description}`}\n                    </a>\n                  </Text>\n                </Row>\n              )\n            })}\n          </Section>\n          <Section>\n            <SectionTitle>Resume</SectionTitle>\n            <Text>\n              <a href=\"\">Download as PDF</a>\n            </Text>\n          </Section>\n        </Inner>\n      </main>\n    </Site>\n  )\n}\n\nexport default ProfilePage\n","import styled from \"styled-components\"\nimport { Box } from \"../System\"\n\nexport const StyledSection = styled(Box)`\n  border-bottom: 2px solid ${props => props.theme.colors.primary};\n`\n","import React, { HTMLProps } from \"react\"\nimport { StyledSection } from \"./styles\"\nimport { H2 } from \"../../typography\"\n\ninterface SectionProps extends Omit<HTMLProps<HTMLDivElement>, \"as\"> {\n  children: React.ReactNode\n}\n\nexport const Section: React.SFC<SectionProps> = ({ children, ...props }) => (\n  <StyledSection as=\"section\" mb={[2, 2, 3]} pb={[2, 2, 3]} {...props}>\n    {children}\n  </StyledSection>\n)\n\nexport const SectionTitle: React.SFC<SectionProps> = ({ children }) => (\n  <H2 mb={[2, 2, 2]}>{children}</H2>\n)\n"],"sourceRoot":""}